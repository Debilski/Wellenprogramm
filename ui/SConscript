#!/usr/bin/env python
import glob
import os
import sys


Import("env", 'target_bin_dir')

def takebasename(file) : return os.path.splitext(os.path.basename(file))[0]

resources = [ env.Qrc(qrc)#, QT4_QRCFLAGS='-name '+takebasename(qrc))
            for qrc in glob.glob('../../ui/*.qrc')]
            
interfaces = [env.Uic4(uic)
            for uic in glob.glob('../../ui/*.ui')]

env.Append( CPPPATH = "extensions")
env.Append( CPPPATH = "3rd-party" )

if not sys.platform=="darwin" :
    env.Append( LINKFLAGS = "-Wl,--export-dynamic" )
    env.Append( LINKFLAGS = Split('-z origin') )
    env.Append( RPATH = env.Literal(os.path.join('\\$$ORIGIN', 'lib')))

if not sys.platform=="darwin" :
    linkflags = "-static-libgcc -ldl -Wl -lstdc++ -Wl,--export-dynamic "
else:
    linkflags = ""#-static-libgcc -ldl -Wl -lstdc++ "


subdirectories = [ '', 'extensions/', '3rd-party/' ]

glob = []
for d in subdirectories:
    glob = glob + Glob(d + '*.cpp') 

plotFile = []
for g in glob:
    append = 1
    for d in subdirectories:
        if str(g).startswith( d + "moc_" ):
            append = 0
#        if str(g).startswith( d + "qrc_" ):
#            append = 0
    if append == 1:
        plotFile.append(g)

if ARGUMENTS.get('build_res', 0):
    plotFile.append(resources)
env.Program('plot', plotFile, LIBS=["plugin"]+env["LIBS"], LINKFLAGS = linkflags)#, LINKFLAGS = "-static-libgcc -ldl -static -Wl -lstdc++")


